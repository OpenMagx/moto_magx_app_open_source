#############################################################################
# Makefile for building deamon
# Generated by tmake at 20:12, 2010/06/06
#     Project: deamon
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	arm-linux-gnueabi-gcc
CXX	=	arm-linux-gnueabi-g++
CFLAGS	=	-pipe -Wall -W -O3 -DNO_DEBUG
CXXFLAGS=	-pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -O3 -DNO_DEBUG
INCPATH	=	-I$(QTDIR)/include
LINK	=	arm-linux-gnueabi-gcc
LFLAGS	=	-Wl,-rpath,$(QTDIR)/lib
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -lm -lqte-mt -lezxappbase -lezxam
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	calldaemon.h \
		code.h \
		db.h \
		myapplication.h \
		rcrecord.h \
		recordSettingItem.h \
		recordlist.h \
		recordwidget.h \
		sqlite3.h \
		sqlite3ext.h
SOURCES =	calldaemon.cpp \
		code.cpp \
		db.cpp \
		main.cpp \
		rcrecord.cpp \
		recordSettingItem.cpp \
		recordlist.cpp \
		recordwidget.cpp
OBJECTS =	calldaemon.o \
		code.o \
		db.o \
		main.o \
		rcrecord.o \
		recordSettingItem.o \
		recordlist.o \
		recordwidget.o
INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	moc_calldaemon.cpp \
		moc_myapplication.cpp \
		moc_recordlist.cpp \
		moc_recordwidget.cpp
OBJMOC	=	moc_calldaemon.o \
		moc_myapplication.o \
		moc_recordlist.o \
		moc_recordwidget.o
DIST	=	
TARGET	=	deamon
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile

Makefile: deamon.pro
	tmake deamon.pro -o Makefile

dist:
	$(TAR) deamon.tar deamon.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) deamon.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

calldaemon.o: calldaemon.cpp \
		calldaemon.h \
		recordwidget.h \
		recordlist.h \
		recordSettingItem.h \
		db.h \
		sqlite3.h \
		sqlite3ext.h

code.o: code.cpp \
		code.h

db.o: db.cpp \
		db.h \
		sqlite3.h \
		sqlite3ext.h \
		code.h

main.o: main.cpp \
		calldaemon.h \
		recordwidget.h \
		recordlist.h \
		recordSettingItem.h \
		myapplication.h \
		code.h

rcrecord.o: rcrecord.cpp

recordSettingItem.o: recordSettingItem.cpp \
		recordSettingItem.h

recordlist.o: recordlist.cpp \
		recordlist.h \
		recordSettingItem.h \
		db.h \
		sqlite3.h \
		sqlite3ext.h \
		code.h

recordwidget.o: recordwidget.cpp \
		recordwidget.h \
		recordlist.h \
		recordSettingItem.h \
		code.h

moc_calldaemon.o: moc_calldaemon.cpp \
		calldaemon.h \
		recordwidget.h \
		recordlist.h \
		recordSettingItem.h

moc_myapplication.o: moc_myapplication.cpp \
		myapplication.h

moc_recordlist.o: moc_recordlist.cpp \
		recordlist.h \
		recordSettingItem.h

moc_recordwidget.o: moc_recordwidget.cpp \
		recordwidget.h \
		recordlist.h \
		recordSettingItem.h

moc_calldaemon.cpp: calldaemon.h
	$(MOC) calldaemon.h -o moc_calldaemon.cpp

moc_myapplication.cpp: myapplication.h
	$(MOC) myapplication.h -o moc_myapplication.cpp

moc_recordlist.cpp: recordlist.h
	$(MOC) recordlist.h -o moc_recordlist.cpp

moc_recordwidget.cpp: recordwidget.h
	$(MOC) recordwidget.h -o moc_recordwidget.cpp

