#############################################################################
# Makefile for building ui
# Generated by tmake at 16:58, 2010/09/26
#     Project: ui
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	arm-linux-gnueabi-gcc
CXX	=	arm-linux-gnueabi-g++
CFLAGS	=	-pipe -Wall -W -O3 -DNO_DEBUG
CXXFLAGS=	-pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -O3 -DNO_DEBUG
INCPATH	=	-I$(QTDIR)/include
LINK	=	arm-linux-gnueabi-gcc
LFLAGS	=	-Wl,-rpath,$(QTDIR)/lib
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -lm -lqte-mt -lezxappbase -lezxam
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	lockUI.h \
		skinDlg.h \
		tool.h
SOURCES =	lockUI.cpp \
		main.cpp \
		skinDlg.cpp \
		tool.cpp
OBJECTS =	lockUI.o \
		main.o \
		skinDlg.o \
		tool.o
INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	moc_lockUI.cpp \
		moc_skinDlg.cpp
OBJMOC	=	moc_lockUI.o \
		moc_skinDlg.o
DIST	=	
TARGET	=	ui
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile

Makefile: ui.pro
	tmake ui.pro -o Makefile

dist:
	$(TAR) ui.tar ui.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) ui.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

lockUI.o: lockUI.cpp \
		lockUI.h \
		tool.h \
		skinDlg.h

main.o: main.cpp \
		lockUI.h \
		tool.h

skinDlg.o: skinDlg.cpp \
		skinDlg.h \
		tool.h

tool.o: tool.cpp \
		tool.h

moc_lockUI.o: moc_lockUI.cpp \
		lockUI.h \
		tool.h

moc_skinDlg.o: moc_skinDlg.cpp \
		skinDlg.h \
		tool.h

moc_lockUI.cpp: lockUI.h
	$(MOC) lockUI.h -o moc_lockUI.cpp

moc_skinDlg.cpp: skinDlg.h
	$(MOC) skinDlg.h -o moc_skinDlg.cpp

