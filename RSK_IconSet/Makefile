#############################################################################
# Makefile for building icon
# Generated by tmake at 13:19, 2011/04/26
#     Project: icon
#    Template: app
#############################################################################

####### Compiler, tools and options

CC	=	arm-linux-gnueabi-gcc
CXX	=	arm-linux-gnueabi-g++
CFLAGS	=	-pipe -Wall -W -O3 -DNO_DEBUG
CXXFLAGS=	-pipe -DQWS -fno-exceptions -fno-rtti -Wall -W -O3 -DNO_DEBUG
INCPATH	=	-I$(QTDIR)/include
LINK	=	arm-linux-gnueabi-gcc
LFLAGS	=	-Wl,-rpath,$(QTDIR)/lib
LIBS	=	$(SUBLIBS) -L$(QTDIR)/lib -lm -lqte-mt -lezxappbase -lezxam
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic

TAR	=	tar -cf
GZIP	=	gzip -9f

####### Files

HEADERS =	BaseDlg.h \
		UtilsTools.h \
		iconSet.h \
		lng.h
SOURCES =	BaseDlg.cpp \
		UtilsTools.cpp \
		iconSet.cpp \
		lng.cpp \
		main.cpp
OBJECTS =	BaseDlg.o \
		UtilsTools.o \
		iconSet.o \
		lng.o \
		main.o
INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	moc_BaseDlg.cpp \
		moc_iconSet.cpp
OBJMOC	=	moc_BaseDlg.o \
		moc_iconSet.o
DIST	=	
TARGET	=	icon
INTERFACE_DECL_PATH = .

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

tmake: Makefile

Makefile: icon.pro
	tmake icon.pro -o Makefile

dist:
	$(TAR) icon.tar icon.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) icon.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core

####### Sub-libraries


###### Combined headers


####### Compile

BaseDlg.o: BaseDlg.cpp \
		BaseDlg.h

UtilsTools.o: UtilsTools.cpp \
		UtilsTools.h

iconSet.o: iconSet.cpp \
		iconSet.h \
		BaseDlg.h \
		UtilsTools.h \
		lng.h

lng.o: lng.cpp \
		lng.h

main.o: main.cpp \
		iconSet.h \
		BaseDlg.h \
		UtilsTools.h \
		lng.h

moc_BaseDlg.o: moc_BaseDlg.cpp \
		BaseDlg.h

moc_iconSet.o: moc_iconSet.cpp \
		iconSet.h \
		BaseDlg.h \
		UtilsTools.h \
		lng.h

moc_BaseDlg.cpp: BaseDlg.h
	$(MOC) BaseDlg.h -o moc_BaseDlg.cpp

moc_iconSet.cpp: iconSet.h
	$(MOC) iconSet.h -o moc_iconSet.cpp

